{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger QRBWS",
    "description": "API of QRBWS",
    "termsOfService": "https://github.com/felansu/QRBWS/blob/master/README.md",
    "contact": {
      "name": "Ferran Gonzalez Alonso",
      "url": "https://github.com/felansu/QRBWS/",
      "email": "gaferran@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/autor/": {
      "get": {
        "tags": [
          "autor"
        ],
        "operationId": "list",
        "description": "Retorna todos os autores",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/autor"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "autor"
        ],
        "summary": "Create",
        "description": "Cria um autor",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "autor",
            "description": "objeto autor",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/autor"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/autor/{autorId}": {
      "get": {
        "tags": [
          "autor"
        ],
        "summary": "Retorna um autor pelo ID",
        "description": "Para uma resposta válida, deve existir um autor com o ID que vem como parâmetro",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "autorId",
            "description": "Id do autor",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "autor"
        ],
        "summary": "Deleta um autor",
        "description": "Para uma resposta válida, deve existir um autor com o ID que vem como parâmetro",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "autorId",
            "description": "Id do autor",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "autor"
        ],
        "summary": "Update",
        "description": "Atualiza um autor",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "autor",
            "description": "objeto autor",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/autor"
              }
            }
          },
          {
            "in": "path",
            "name": "autorId",
            "description": "autor id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/livro/": {
      "get": {
        "tags": [
          "livro"
        ],
        "operationId": "list",
        "description": "Retorna todos os livros",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de livros.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/livro"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "livro"
        ],
        "summary": "Create",
        "description": "Cria uma livro",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "livro",
            "description": "livro object",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/livro"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/livro/{livroId}": {
      "get": {
        "tags": [
          "livro"
        ],
        "summary": "Retorna uma livro",
        "description": "Para uma resposta válida um livro com livroId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "livroId",
            "description": "livro id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "livro"
        ],
        "summary": "Deleta um livro",
        "description": "Para uma resposta válida um livro com livroId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "livroId",
            "description": "livro id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "livro"
        ],
        "summary": "Update",
        "description": "Atualiza um livro",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "livro",
            "description": "livro object",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/livro"
              }
            }
          },
          {
            "in": "path",
            "name": "livroId",
            "description": "livro id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/categoria/": {
      "get": {
        "tags": [
          "categoria"
        ],
        "operationId": "list",
        "description": "Retorna todas as categorias",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de categorias.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/categoria"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "categoria"
        ],
        "summary": "Create",
        "description": "Cria uma categoria",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "categoria",
            "description": "categoria object",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/categoria"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/categoria/{categoriaId}": {
      "get": {
        "tags": [
          "categoria"
        ],
        "summary": "Retorna uma categoria",
        "description": "Para uma resposta válida um categoria com categoriaId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoriaId",
            "description": "categoria id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "categoria"
        ],
        "summary": "Deleta um categoria",
        "description": "Para uma resposta válida um categoria com categoriaId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoriaId",
            "description": "categoria id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "categoria"
        ],
        "summary": "Update",
        "description": "Atualiza uma categoria",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "categoria",
            "description": "categoria object",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/categoria"
              }
            }
          },
          {
            "in": "path",
            "name": "categoriaId",
            "description": "autor id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/comentario/": {
      "get": {
        "tags": [
          "comentario"
        ],
        "operationId": "list",
        "description": "Retorna todas as categorias",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de categorias.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "comentario"
        ],
        "summary": "Create",
        "description": "Cria uma comentario",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "comentario",
            "description": "Comment object",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/comentario/{comentarioId}": {
      "get": {
        "tags": [
          "comentario"
        ],
        "summary": "Retorna uma comentario",
        "description": "Para uma resposta válida um comentario com comentarioId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "comentarioId",
            "description": "Comment id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "comentario"
        ],
        "summary": "Deleta um comentario",
        "description": "Para uma resposta válida um comentario com comentarioId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "comentarioId",
            "description": "Comment id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "comentario"
        ],
        "summary": "Update",
        "description": "Atualiza um comentario",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "comentario",
            "description": "Comment object",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          {
            "in": "path",
            "name": "comentarioId",
            "description": "autor id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/funcionario/": {
      "get": {
        "tags": [
          "funcionario"
        ],
        "operationId": "list",
        "description": "Retorna todos os funcionarios",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de funcionarios.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "funcionario"
        ],
        "summary": "Create",
        "description": "Cria um funcionario",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "funcionario",
            "description": "Objeto funcionario",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/funcionario"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/funcionario/{funcionarioId}": {
      "get": {
        "tags": [
          "funcionario"
        ],
        "summary": "Retorna uma funcionario",
        "description": "Para uma resposta válida um funcionario com funcionarioId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "funcionarioId",
            "description": "Comment id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "funcionario"
        ],
        "summary": "Deleta um funcionario",
        "description": "Para uma resposta válida um funcionario com funcionarioId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "funcionarioId",
            "description": "Comment id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "funcionario"
        ],
        "summary": "Update",
        "description": "Atualiza um funcionario",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "funcionario",
            "description": "Objeto funcionario",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          {
            "in": "path",
            "name": "funcionarioId",
            "description": "Id do funcionario",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/feriado/": {
      "get": {
        "tags": [
          "feriado"
        ],
        "operationId": "list",
        "description": "Retorna todos os feriados",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de feriados",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feriado"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "feriado"
        ],
        "summary": "Create",
        "description": "Cria um feriado",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "feriado",
            "description": "Objeto feriado",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Feriado"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/feriado/{feriadoId}": {
      "get": {
        "tags": [
          "feriado"
        ],
        "summary": "Retorna um feriado",
        "description": "Para uma resposta válida um feriado com feriadoId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "feriadoId",
            "description": "Id do feriado",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "feriado"
        ],
        "summary": "Deleta um feriado",
        "description": "Para uma resposta válida um feriado com feriadoId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "feriadoId",
            "description": "Id do feriado",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "feriado"
        ],
        "summary": "Update",
        "description": "Atualiza um feriado",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "feriado",
            "description": "Objeto feriado",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Feriado"
              }
            }
          },
          {
            "in": "path",
            "name": "feriadoId",
            "description": "Id do feriado",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/idioma/": {
      "get": {
        "tags": [
          "idioma"
        ],
        "operationId": "list",
        "description": "Retorna todos os idiomas",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de idiomas.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/idioma"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "idioma"
        ],
        "summary": "Create",
        "description": "Cria um idioma",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "idioma",
            "description": "Objeto idioma",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/idioma"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/idioma/{idiomaId}": {
      "get": {
        "tags": [
          "idioma"
        ],
        "summary": "Retorna um idioma",
        "description": "Para uma resposta válida um idioma com idiomaId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idiomaId",
            "description": "Id do idioma",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "idioma"
        ],
        "summary": "Deleta um idioma",
        "description": "Para uma resposta válida um idioma com idiomaId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idiomaId",
            "description": "Id do idioma",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "idioma"
        ],
        "summary": "Update",
        "description": "Atualiza um idioma",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "idioma",
            "description": "Objeto idioma",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/idioma"
              }
            }
          },
          {
            "in": "path",
            "name": "idiomaId",
            "description": "Id do idioma",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/emprestimo/": {
      "get": {
        "tags": [
          "emprestimo"
        ],
        "operationId": "list",
        "description": "Retorna todos os emprestimos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de emprestimos.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/emprestimo"
              }
            }
          }
        }
      }
    },
    "/emprestimo/emprestar": {
      "post": {
        "tags": [
          "emprestimo"
        ],
        "summary": "Emprestar",
        "description": "Empresta um livro",
        "operationId": "emprestar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "emprestimo",
            "description": "Objeto emprestimo",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/emprestimo"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/emprestimo/devolver?emprestimoId={emprestimoId}": {
      "get": {
        "tags": [
          "emprestimo"
        ],
        "summary": "Devolver",
        "description": "Devolver um livro",
        "operationId": "devolver",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "emprestimoId",
            "description": "Id do emprestimo",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/emprestimo/renovar?emprestimoId={emprestimoId}": {
      "get": {
        "tags": [
          "emprestimo"
        ],
        "summary": "Renovar",
        "description": "Renovar um livro",
        "operationId": "renovar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "emprestimoId",
            "description": "Id do emprestimo",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/emprestimo/{emprestimoId}": {
      "get": {
        "tags": [
          "emprestimo"
        ],
        "summary": "Retorna um emprestimo",
        "description": "Para uma resposta válida um emprestimo com emprestimoId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "emprestimoId",
            "description": "Id do emprestimo",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "emprestimo"
        ],
        "summary": "Deleta um emprestimo",
        "description": "Para uma resposta válida um emprestimo com emprestimoId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "emprestimoId",
            "description": "Id do emprestimo",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "emprestimo"
        ],
        "summary": "Update",
        "description": "Atualiza um emprestimo",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "emprestimo",
            "description": "Objeto emprestimo",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/emprestimo"
              }
            }
          },
          {
            "in": "path",
            "name": "emprestimoId",
            "description": "Id do emprestimo",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/stock/": {
      "get": {
        "tags": [
          "stock"
        ],
        "operationId": "list",
        "description": "Retorna todas as stock",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de stock.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Stock"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "stock"
        ],
        "summary": "Create",
        "description": "Cria uma stock",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "stock",
            "description": "Stock object",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Stock"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/stock/{stockId}": {
      "get": {
        "tags": [
          "stock"
        ],
        "summary": "Retorna uma stock",
        "description": "Para uma resposta válida um stock com stockId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "stockId",
            "description": "Stock id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "stock"
        ],
        "summary": "Deleta um stock",
        "description": "Para uma resposta válida um stock com stockId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "stockId",
            "description": "Stock id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "stock"
        ],
        "summary": "Update",
        "description": "Atualiza um stock",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "stock",
            "description": "Stock object",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Stock"
              }
            }
          },
          {
            "in": "path",
            "name": "stockId",
            "description": "Stock id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/estudante/": {
      "get": {
        "tags": [
          "estudante"
        ],
        "operationId": "list",
        "description": "Retorna todos os estudantes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de estudantes.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/estudante"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "estudante"
        ],
        "summary": "Create",
        "description": "Cria uma estudante",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "estudante",
            "description": "Objeto estudante",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/estudante"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/estudante/{estudanteId}": {
      "get": {
        "tags": [
          "estudante"
        ],
        "summary": "Retorna uma estudante",
        "description": "Para uma resposta válida um estudante com estudanteId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "estudanteId",
            "description": "Id do estudante",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "estudante"
        ],
        "summary": "Deleta um estudante",
        "description": "Para uma resposta válida um estudante com estudanteId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "estudanteId",
            "description": "Id do estudante",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "estudante"
        ],
        "summary": "Update",
        "description": "Atualiza um estudante",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "estudante",
            "description": "Objeto estudante",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/estudante"
              }
            }
          },
          {
            "in": "path",
            "name": "estudanteId",
            "description": "Id do estudante",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/contaUsuario/": {
      "get": {
        "tags": [
          "contaUsuario"
        ],
        "operationId": "list",
        "description": "Retorna todas as contas de usuario",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "description": "Número máximo de elementos na lista",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "O deslocamento a partir do primeiro resultado da lista",
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de contas de usuario",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contaUsuario"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "contaUsuario"
        ],
        "summary": "Create",
        "description": "Cria uma contaUsuario",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "contaUsuario",
            "description": "Objeto contaUsuario",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/contaUsuario"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/contaUsuario/{contaUsuarioId}": {
      "get": {
        "tags": [
          "contaUsuario"
        ],
        "summary": "Retorna uma contaUsuario",
        "description": "Para uma resposta válida um contaUsuario com contaUsuarioId deve existir",
        "operationId": "getById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contaUsuarioId",
            "description": "contaUsuario id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "contaUsuario"
        ],
        "summary": "Deleta uma contaUsuario",
        "description": "Para uma resposta válida um contaUsuario com contaUsuarioId deve existir",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contaUsuarioId",
            "description": "Id da contaUsuario",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "contaUsuario"
        ],
        "summary": "Update",
        "description": "Atualiza um contaUsuario",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "contaUsuario",
            "description": "Objeto contaUsuario",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/contaUsuario"
              }
            }
          },
          {
            "in": "path",
            "name": "contaUsuarioId",
            "description": "Id da contaUsuario",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/contaUsuario/verificarMultas?contaUsuarioId={contaUsuarioId}": {
      "get": {
        "tags": [
          "contaUsuario"
        ],
        "summary": "Gera multa se necessário",
        "description": "Gera multa se necessário",
        "operationId": "verificarMultas",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contaUsuarioId",
            "description": "contaUsuario id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    },
    "/contaUsuario/pagarMulta?multaId={multaId}": {
      "get": {
        "tags": [
          "contaUsuario"
        ],
        "summary": "Paga multa",
        "description": "Paga multa",
        "operationId": "pagarMulta",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "multaId",
            "description": "multa id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Erro 400: Parâmetros inválidos"
          },
          "404": {
            "description": "Erro 404: Página não encontrada"
          }
        }
      }
    }
  },
  "definitions": {
    "Autor": {
      "type": "object",
      "required": [
        "id",
        "nome",
        "informacoesAdicionais"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "nome": {
          "type": "string"
        },
        "informacoesAdicionais": {
          "type": "string"
        },
        "livros": {
          "type": "array",
          "items": {
            "$ref": "Livro"
          }
        }
      }
    },
    "Livro": {
      "type": "object",
      "required": [
        "id",
        "isbn",
        "titulo"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isbn": {
          "type": "string"
        },
        "titulo": {
          "type": "string"
        },
        "sinopse": {
          "type": "string"
        },
        "paginas": {
          "type": "integer",
          "format": "int32"
        },
        "idioma": {
          "$ref": "Idioma"
        },
        "categoria": {
          "$ref": "Categoria"
        },
        "autores": {
          "type": "array",
          "items": {
            "$ref": "Autor"
          }
        },
        "comentarios": {
          "type": "array",
          "items": {
            "$ref": "Comentario"
          }
        }
      }
    },
    "Categoria": {
      "type": "object",
      "required": [
        "id",
        "descricao"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "descricao": {
          "type": "string"
        }
      }
    },
    "Commentario": {
      "type": "object",
      "required": [
        "id",
        "avaliacao",
        "contaUsuario"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "avaliacao": {
          "type": "integer",
          "format": "int32"
        },
        "descricao": {
          "type": "string"
        },
        "dataCreated": {
          "type": "date",
          "format": "date"
        },
        "recomendacao": {
          "type": "boolean",
          "format": "boolean"
        },
        "contaUsuario": {
          "$ref": "ContaUsuario"
        }
      }
    },
    "funcionario": {
      "allOf": [
        {
          "$ref": "#/definitions/Pessoa"
        },
        {
          "type": "object",
          "required": [
            "codigo"
          ],
          "properties": {
            "codigo": {
              "type": "string"
            }
          }
        }
      ]
    },
    "Feriado": {
      "type": "object",
      "required": [
        "id",
        "descricao",
        "dataInicio",
        "dataFim"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "descricao": {
          "type": "string"
        },
        "dataInicio": {
          "type": "date",
          "format": "date"
        },
        "dataFim": {
          "type": "date",
          "format": "date"
        }
      }
    },
    "Idioma": {
      "type": "object",
      "required": [
        "id",
        "descricao"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "descricao": {
          "type": "string"
        }
      }
    },
    "Emprestimo": {
      "type": "object",
      "required": [
        "id",
        "contaUsuario",
        "livro"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "dataEmprestimo": {
          "type": "date",
          "format": "date"
        },
        "dataDevolucao": {
          "type": "date",
          "format": "date"
        },
        "dataLimiteDevolucao": {
          "type": "date",
          "format": "date"
        },
        "devolvido": {
          "type": "boolean",
          "format": "boolean"
        },
        "avisado": {
          "type": "boolean",
          "format": "boolean"
        },
        "renovacoes": {
          "type": "integer",
          "format": "int32"
        },
        "contaUsuario": {
          "$ref": "ContaUsuario"
        },
        "livro": {
          "$ref": "Livro"
        }
      }
    },
    "Pessoa": {
      "type": "object",
      "required": [
        "nome",
        "email"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "nome": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "celular": {
          "type": "string"
        }
      }
    },
    "Stock": {
      "type": "object",
      "required": [
        "id",
        "livro",
        "disponivel"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "livro": {
          "$ref": "Livro"
        },
        "disponivel": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Estudante": {
      "allOf": [
        {
          "$ref": "#/definitions/Pessoa"
        },
        {
          "type": "object",
          "required": [
            "matricula"
          ],
          "properties": {
            "matricula": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ContaUsuario": {
      "type": "object",
      "required": [
        "id",
        "login",
        "senha",
        "pessoa"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "string"
        },
        "senha": {
          "type": "string"
        },
        "pessoa": {
          "$ref": "Pessoa"
        },
        "ativo": {
          "type": "boolean",
          "format": "boolean"
        },
        "multas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Multa"
          }
        }
      }
    },
    "Multa": {
      "type": "object",
      "required": [
        "id",
        "valor",
        "emprestimo",
        "paga",
        "dataPagamento"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "valor": {
          "type": "number",
          "format": "double"
        },
        "emprestimo": {
          "$ref": "emprestimo"
        },
        "paga": {
          "type": "boolean",
          "format": "boolean"
        },
        "dataPagamento": {
          "type": "date",
          "format": "date"
        }
      }
    }
  }
}